# DO NOT EDIT THIS SECTION #####################################################
[Global]
FallbackTheme=default


[UnlockManager]
# Unlock harder/different steps based on passing easier steps.
AutoLockChallengeSteps=false
AutoLockEditSteps=true
# determine if songs loaded via AdditionalSongs should be locked.
SongsNotAdditional=true

UnlockNames=""
# useful commands:
# require,(UnlockRequirement),(value);
# where (UnlockRequirement) is one of the UnlockRequirement enum values.

# song,(Song Name);
# sets a Song to be unlocked

# course,(Course Name);
# sets a Course to be unlocked

# roulette;
# Song shows up in roulette (useful with Song only)

# mod,(modifier);
# sets a modifier to be unlocked.

# code,(code);
# assigns a code to the unlock

# examples:
# 1) The song "Pledge" requires 500 AP.
# Unlock1Command=song,"Pledge";require,"UnlockRequirement_ArcadePoints",500

# 2) The song "ABC" can be unlocked via roulette; pick an arbitrary code
# to use to store the unlock.
# Unlock2Command=song,"ABC";code,"59183751";roulette

# 03 #

# Setting Default Behaviour for new/no profile players

[Common]
# Default modifiers and noteskin.
DefaultModifiers="1x"
DefaultNoteskin="DGPSkin"

# Default name for no-profile high scores
NoScoreName="ANON"

# Extra Stage and One More Extra Stage Modifiers

[SongManager]
# SSC: Determine what the ES/OMES Modifiers are
ExtraStagePlayerModifiers="default,2x"
ExtraStageStageModifiers="failimmediatecontinue,norecover,battery"
OMESPlayerModifiers="default,2x"
OMESStageModifiers="failimmediatecontinue,suddendeath"

#Modifying BPM colors, display, etc.

[BPMDisplay]
# Various commands for the BPMDisplay, ranging from no bpm, a non changing bpm,
# a bpm that changes, one that is 'random' ( boss songs ) and when a song is
# an es/omes!
SetNoBpmCommand=diffusetopedge,color("#800080");diffusebottomedge,color("#4B0082")
SetNormalCommand=diffusetopedge,color("#fbfb57");diffusebottomedge,color("#fb9c57")
SetChangeCommand=diffusetopedge,color("#fb9c57");diffusebottomedge,color("#fb5757")
SetRandomCommand=diffusetopedge,color("#fb9c57");diffusebottomedge,color("#fb5757")
SetExtraCommand=diffusetopedge,color("#fb5757");diffusebottomedge,color("#9c4242")
# Determines if it shows both bpms ( 000-100 ) or cycles between the min and max.
Cycle=false
# Text when there is no BPM
NoBpmText="NULL"
# Seperator between both bpms ( 100-200 ).
Separator=" - "
# ??? when it cycles.
ShowQMarksInRandomCycle=true
QuestionMarksText="???"
RandomText="!!!"
# xxx: localize me -aj
VariousText="000"
FormatString="%03.0f"

# Removing Toasties

[Gameplay]
# Toasties are annoying.
ToastyTriggersAt=0
ToastyMinTNS='TapNoteScore_W2'

[GameState]
# Default song and sort. these don't really matter
DefaultSong=""
DefaultSort="Group"
# How good of a grade you have to get to get an ES/OMES. Locked to an 'AA'
GradeTierForExtra1="Grade_Tier03"
GradeTierForExtra2="Grade_Tier04"
# and how difficult that song you go thas to be
MinDifficultyForExtra="Difficulty_Hard"
# System Direction
AreStagePlayerModsForced=false
AreStageSongModsForced=AreStageSongModsForced
AllowLateJoin=false
# Disallow bad names
UseNameBlacklist=true
# Alow OMES
AllowExtra2=true
# Don't let the player change difficulties on an ES/OMES
LockExtraStageSelection=true
# Let edit steps be allowed for earning extra stages.
EditAllowedForExtra=true

[HighScore]
# Default highscore name for no entries ( like how street fighter has ' CAP ' )
EmptyName="DGP"

#Modifying lifegain and loss

[LifeMeterBar]
# The default life bar you see in gameplay

# Percentage in which the game starts yelling at you to stop sucking
DangerThreshold=0.15
# And how much it starts up at.
InitialValue=0.5
# And how much it takes to get ravin'
HotValue=0.9
# And how much there is to fill up ( only for debug )
LifeMultiplier=1.0
# How good you gotta hit it to keep it alive. ( W3 is 'Great' );
MinStayAlive="TapNoteScore_W3"
# If the life difficulty should be changed on extra stages
ForceLifeDifficultyOnExtraStage=false
# How much it changes
LifePercentChangeW1=0.010
LifePercentChangeW2=0.008
LifePercentChangeW3=0.002
LifePercentChangeW4=0.000
LifePercentChangeW5=-0.080
LifePercentChangeMiss=-0.160
LifePercentChangeHitMine=-0.160
LifePercentChangeHeld=IsGame("pump") and 0.000 or 0.008
LifePercentChangeLetGo=IsGame("pump") and 0.000 or -0.080
LifePercentChangeMissedHold=-0.040
LifePercentChangeCheckpointMiss=-0.080
LifePercentChangeCheckpointHit=0.008

# Aesthetic/Theming Stuff

[MusicWheel]
SwitchSeconds=0.08
RandomPicksLockedSongs=false

SortOrders={ "SortOrder_Preferred", "SortOrder_Group", "SortOrder_Title", "SortOrder_BPM", "SortOrder_Artist", "SortOrder_Genre" }
# SortOrders={ "SortOrder_Preferred", "SortOrder_Group", "SortOrder_Title", "SortOrder_BPM", "SortOrder_Popularity", "SortOrder_Artist", "SortOrder_Genre" }

ShowRoulette=false
ShowRandom=false
ShowPortal=false

MostPlayedSongsToShow=11
RecentSongsToShow=11

UseEasyMarkerFlag=false

ModeMenuChoiceNames="Preferred,Group,Title,Bpm,Popularity,TopGrades,Artist,EasyMeter,MediumMeter,HardMeter,ChallengeMeter,DoubleEasyMeter,DoubleMediumMeter,DoubleHardMeter,DoubleChallengeMeter,Recent"

CustomWheelItemNames=""

[NoteField]



[Player]
ComboBreakOnImmediateHoldLetGo=true
ComboUnderField=true
TapJudgmentsUnderField=true
HoldJudgmentsUnderField=true


[ScreenWithMenuElements]
TimerX=_screen.w-30
TimerY=-120
TimerOnCommand=visible,true;draworder,99;

FooterX=_screen.cx
FooterY=_screen.h

MemoryCardIcons=true

MemoryCardDisplayP1X=WideScale(18,24);
MemoryCardDisplayP1Y=SCREEN_BOTTOM-14
MemoryCardDisplayP1OnCommand=draworder,96;zoom,WideScale(0.175, 0.215)


MemoryCardDisplayP2X=SCREEN_RIGHT-WideScale(18,24)
MemoryCardDisplayP2Y=SCREEN_BOTTOM-14
MemoryCardDisplayP2OnCommand=draworder,96;zoom,WideScale(0.175, 0.215)

[ScreenTextEntry]
TimerSeconds=99

[ScreenInit]
NextScreen=Branch.AfterInit()
StartScreen=Branch.AfterInit()

[ScreenTitleMenu]
ChoiceNames="GameStart,Options,Exit"
LogoOnCommand=visible,false

[ScreenTitleJoin]
NextScreen="ScreenCaution"
IdleTimeoutSeconds=30
IdleTimeoutScreen="ScreenInit"
ChoiceNames="GameStart"
ChoiceGameStart="name,Game Start;screen,ScreenCaution"
ScrollerOnCommand=visible,false

[ScreenCaution]
NextScreen="ScreenSelectProfile"
PrevScreen=Branch.TitleMenu()

[ScreenSelectProfile]
TimerSeconds=60
NextScreen="ScreenSelectGametype"
PrevScreen=Branch.TitleMenu()
StartScreen="ScreenSelectGametype"

[ScreenSelectGametype]
Class="ScreenSelectMaster"
Fallback="ScreenSelectMaster"

PrevScreen="ScreenInit"
ChoiceNames="1,2,3"
DefaultChoice="2"
# Send the player to the right screen for their style.
Choice1="screen,ScreenSelectCStyle;text,Cross Style;name,Cstyle"
Choice3="screen,ScreenSelectXStyle;text,X Style;name,Xstyle"
Choice2="screen,ScreenSelectFStyle;text,Full Style;name,Fstyle"
# Cursor Commands
ShowScroller=true
ShowIcon=true
ScrollerX=SCREEN_CENTER_X
ScrollerY=SCREEN_CENTER_Y + 80

IconChoice1X = SCREEN_CENTER_X - 240
IconChoice1Y = SCREEN_CENTER_Y - 50

IconChoice2X = SCREEN_CENTER_X 
IconChoice2Y = SCREEN_CENTER_Y - 50

IconChoice3X = SCREEN_CENTER_X + 240
IconChoice2Y = SCREEN_CENTER_Y - 50

[ScreenSelectCStyle]
Class="ScreenSelectMaster"
Fallback="ScreenSelectMaster"

PrevScreen="ScreenSelectGametype"
ChoiceNames="Csingle,Cdoubles"
DefaultChoice="Csingle"
# Three styles
ChoiceCsingle="name,CSingles;style,single4;screen,"..Branch.AfterSelectStyle()
ChoiceCdoubles="name,CDoubles;style,double4;screen,"..Branch.AfterSelectStyle()
# Cursor Commands
ShowScroller=true
ShowIcon=true
ScrollerX=SCREEN_CENTER_X
ScrollerY=SCREEN_CENTER_Y - 60
ScrollerTransform=function(self,offset,itemIndex,numItems) self:x(360*(itemIndex-(numItems-1)/2)); end

[ScreenSelectXStyle]
Class="ScreenSelectMaster"
Fallback="ScreenSelectMaster"

PrevScreen="ScreenSelectGametype"
ChoiceNames="Xsingle,Xdoubles"
DefaultChoice="Xsingle"
# Three Styles
ChoiceXsingle="name,XSingles;style,single5;screen,"..Branch.AfterSelectStyle()
ChoiceXdoubles="name,XDoubles;style,double5;screen,"..Branch.AfterSelectStyle()
# Cursor Commands
ShowScroller=true
ScrollerX=SCREEN_CENTER_X
ScrollerY=SCREEN_CENTER_Y - 40
ScrollerTransform=function(self,offset,itemIndex,numItems) self:x(360*(itemIndex-(numItems-1)/2)); end

[ScreenSelectFStyle]
Class="ScreenSelectMaster"
Fallback="ScreenSelectMaster"

PrevScreen="ScreenSelectGametype"
ChoiceNames="Fsingle,Fdouble"
DefaultChoice="Fsingle"
# Three Styles
ChoiceFsingle="name,FSingles;style,single8;screen,"..Branch.AfterSelectStyle()
ChoiceFdouble="name,FDoubles;style,double8;screen,"..Branch.AfterSelectStyle()
# Cursor Commands
ShowScroller=true
ScrollerX=SCREEN_CENTER_X
ScrollerY=SCREEN_CENTER_Y - 40
ScrollerTransform=function(self,offset,itemIndex,numItems) self:x(360*(itemIndex-(numItems-1)/2)); end

[ScreenSelectPlayMode]
ChoiceNames="1,2"
#PrevScreen=Branch.GetStyle()
DefaultChoice=1
Choice1="name,Normal;text,Normal;playmode,regular;screen,ScreenSelectMusic;setenv,sMode,Normal"
Choice2="name,Endless;text,Endless;playmode,endless;screen,ScreenSelectCourse;setenv,sMode,Endless"


[ScreenGameplay]
AllowCenter1Player=false
StartGivesUp=false
